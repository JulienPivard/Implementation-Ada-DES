# vim: nofoldenable: list:
# PIVARD Julien
# Dernière modification : Lundi 11 novembre[11] 2019

###################
# Point d'entrée #
###################
.PHONY: all
all: $(CIBLECOMPILE)

MAKEFILE_V	:= 2.1.6

# Ajout du chemin du compilateur gnat dans le path
GNAT_BIN_LINUX			:= /usr/gnat/bin

GNAT_BIN_MACOS			:= /usr/local/gnat/bin

ifneq ($(wildcard $(GNAT_BIN_PERSO)), )
    PATH		:= $(GNAT_BIN_PERSO):$(PATH)
    $(info  Utilisation de bin GNAT personnalisé)
else ifneq ($(wildcard $(GNAT_BIN_MACOS)), )
    PATH		:= $(GNAT_BIN_MACOS):$(PATH)
else ifneq ($(wildcard $(GNAT_BIN_LINUX)), )
    PATH		:= $(GNAT_BIN_LINUX):$(PATH)
endif

# Vérifie si le binaire existe. Sinon il ajoute la cible de compilation
# en dépendance.
ifeq ($(wildcard $(EXECUTABLE)), )
    DEPEND	= $(CIBLECOMPILE)
else
    DEPEND	=
endif

###################
.PHONY: run
run: $(DEPEND)
	$(EXECUTABLE) $(ARGUMENTSAPPLI)

###################
.PHONY: version_makefile
version_makefile:
	@echo $(MAKEFILE_V)

###################
.PHONY: build
build:
	@echo "  "
	@echo " ┌───────────────────────────────────────────────────────────────┐"
	@echo " │                  Lancement de la compilation                  │"
	@echo " └───────────────────────────────────────────────────────────────┘"
	$(CC) -P$(GPR) $(OPTGPR)
	@echo " ─────────────────────────────────────────────────────────────────"

###################
.PHONY: clean
clean:
	@echo " ┌──────────────────────────────────────────────────────────────┐"
	@echo " │ Effacement des fichiers temporaire généré par la compilation │"
	@echo " └──────────────────────────────────────────────────────────────┘"
	-$(RM) $(OPTRM) "./$(CHEMIN_OBJET)"
	@echo " ────────────────────────────────────────────────────────────────"

###################
.PHONY: distclean
distclean: clean
	@echo " ┌──────────────────────────────────────────────────────────────┐"
	@echo " │ Effacement des fichiers executable généré par la compilation │"
	@echo " └──────────────────────────────────────────────────────────────┘"
	-$(RM) $(OPTRM) "./$(CHEMIN_EXEC)"
	@echo " ────────────────────────────────────────────────────────────────"
ifneq ($(VARNOMFICHIER), )
    ifneq ($(wildcard $(VARNOMFICHIER).*), )
	-$(RM) $(OPTRM) ./$(VARNOMFICHIER).$(EXTENSION_CHIFFRE_S) \
	                ./$(VARNOMFICHIER).$(EXTENSION_DECHIFFRE_S) \
	                ./$(VARNOMFICHIER).$(EXTENSION_CHIFFRE_T) \
	                ./$(VARNOMFICHIER).$(EXTENSION_DECHIFFRE_T) \
	                ./$(VARNOMFICHIER).$(EXTENSION_CHIFFRE_R) \
	                ./$(VARNOMFICHIER).$(EXTENSION_DECHIFFRE_R)
   endif
endif

ifeq ($(shell which cloc 2>/dev/null), )
    TECHNIQUE_COMPTAGE	= avec_find
else
    TECHNIQUE_COMPTAGE	= avec_cloc
endif

###################
.PHONY: compter
compter: $(TECHNIQUE_COMPTAGE)

.PHONY: avec_find
avec_find:
	find $(DOSSIERSRC) -type f | xargs cat | wc $(OPTCOMPTAGE)

.PHONY: avec_cloc
avec_cloc:
	cloc --exclude-dir=obj,bin --by-percent cmb $(DOSSIERSRC)

###################
.PHONY: compter_detail
compter_detail: $(TECHNIQUE_COMPTAGE)_detail

.PHONY: avec_find_detail
avec_find_detail:
	find $(DOSSIERSRC) -type f | xargs wc $(OPTCOMPTAGE)

.PHONY: avec_cloc_detail
avec_cloc_detail:
	cloc --exclude-dir=obj,bin --by-file-by-lang $(DOSSIERSRC)

# Afficher toutes les cibles disponible
.PHONY: afficher_nom_cibles
afficher_nom_cibles:
	@grep $(MAKEFILE_LIST) -i -e "^[a-zA-Z_\-]*:" | awk 'BEGIN {FS = ":"}; {printf "%s - %s\n", $$1, $$2}'
